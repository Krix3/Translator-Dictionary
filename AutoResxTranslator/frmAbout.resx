<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>